// <auto-generated/> by Diplomat

#pragma warning disable 0105
using System;
using System.Runtime.InteropServices;

using Devolutions.Picky.Diplomat;
#pragma warning restore 0105

namespace Devolutions.Picky.Raw;

#nullable enable

[StructLayout(LayoutKind.Sequential)]
public partial struct PublicKey
{
#if __IOS__
    private const string NativeLib = "libDevolutionsPicky.framework/libDevolutionsPicky";
#else
    private const string NativeLib = "DevolutionsPicky";
#endif

    /// <summary>
    /// Extracts public key from PEM object.
    /// </summary>
    [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "PublicKey_from_pem", ExactSpelling = true)]
    public static unsafe extern IntPtr FromPem(Pem* pem);

    /// <summary>
    /// Reads a public key from its DER encoding (i.e.: SubjectPublicKeyInfo structure).
    /// </summary>
    [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "PublicKey_from_der", ExactSpelling = true)]
    public static unsafe extern IntPtr FromDer(byte* der, nuint derSz);

    /// <summary>
    /// Reads a RSA public key from its DER encoding (i.e.: PKCS1).
    /// </summary>
    [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "PublicKey_from_pkcs1", ExactSpelling = true)]
    public static unsafe extern IntPtr FromPkcs1(byte* der, nuint derSz);

    /// <summary>
    /// Exports the public key into a PEM object.
    /// </summary>
    [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "PublicKey_to_pem", ExactSpelling = true)]
    public static unsafe extern IntPtr ToPem(PublicKey* self);

    /// <summary>
    /// Exports the public key into a PEM object using the PKCS 1 format
    /// </summary>
    /// <remarks>
    /// This format can only be used for RSA keys.
    /// </remarks>
    [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "PublicKey_to_pkcs1_pem", ExactSpelling = true)]
    public static unsafe extern IntPtr ToPkcs1Pem(PublicKey* self);

    /// <summary>
    /// Retrieves the key kind for this public key.
    /// </summary>
    [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "PublicKey_get_kind", ExactSpelling = true)]
    public static unsafe extern KeyKind GetKind(PublicKey* self);

    [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "PublicKey_destroy", ExactSpelling = true)]
    public static unsafe extern void Destroy(PublicKey* self);
}
