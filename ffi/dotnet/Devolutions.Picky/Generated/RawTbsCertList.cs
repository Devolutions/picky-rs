// <auto-generated/> by Diplomat

#pragma warning disable 0105
using System;
using System.Runtime.InteropServices;

using Devolutions.Picky.Diplomat;
#pragma warning restore 0105

namespace Devolutions.Picky.Raw;

#nullable enable

[StructLayout(LayoutKind.Sequential)]
public partial struct TbsCertList
{
#if __IOS__
    private const string NativeLib = "libDevolutionsPicky.framework/libDevolutionsPicky";
#else
    private const string NativeLib = "DevolutionsPicky";
#endif

    [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "TbsCertList_get_version", ExactSpelling = true)]
    public static unsafe extern Version GetVersion(TbsCertList* self);

    [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "TbsCertList_get_signature_algorithm", ExactSpelling = true)]
    public static unsafe extern AlgorithmIdentifier* GetSignatureAlgorithm(TbsCertList* self);

    [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "TbsCertList_get_issuer", ExactSpelling = true)]
    public static unsafe extern IntPtr GetIssuer(TbsCertList* self, DiplomatWriteable* writable);

    [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "TbsCertList_get_this_upate", ExactSpelling = true)]
    public static unsafe extern Time* GetThisUpate(TbsCertList* self);

    [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "TbsCertList_get_next_update", ExactSpelling = true)]
    public static unsafe extern Time* GetNextUpdate(TbsCertList* self);

    [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "TbsCertList_get_revoked_certificates", ExactSpelling = true)]
    public static unsafe extern RevokedCertificateIterator* GetRevokedCertificates(TbsCertList* self);

    [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "TbsCertList_get_extenstions", ExactSpelling = true)]
    public static unsafe extern ExtensionIterator* GetExtenstions(TbsCertList* self);

    [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "TbsCertList_destroy", ExactSpelling = true)]
    public static unsafe extern void Destroy(TbsCertList* self);
}
