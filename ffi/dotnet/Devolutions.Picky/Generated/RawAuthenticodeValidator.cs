// <auto-generated/> by Diplomat

#pragma warning disable 0105
using System;
using System.Runtime.InteropServices;

using Devolutions.Picky.Diplomat;
#pragma warning restore 0105

namespace Devolutions.Picky.Raw;

#nullable enable

[StructLayout(LayoutKind.Sequential)]
public partial struct AuthenticodeValidator
{
#if __IOS__
    private const string NativeLib = "libDevolutionsPicky.framework/libDevolutionsPicky";
#else
    private const string NativeLib = "DevolutionsPicky";
#endif

    [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "AuthenticodeValidator_exact_date", ExactSpelling = true)]
    public static unsafe extern void ExactDate(AuthenticodeValidator* self, UtcDate* exact);

    [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "AuthenticodeValidator_interval_date", ExactSpelling = true)]
    public static unsafe extern void IntervalDate(AuthenticodeValidator* self, UtcDate* lower, UtcDate* upper);

    [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "AuthenticodeValidator_require_not_before_check", ExactSpelling = true)]
    public static unsafe extern void RequireNotBeforeCheck(AuthenticodeValidator* self);

    [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "AuthenticodeValidator_require_not_after_check", ExactSpelling = true)]
    public static unsafe extern void RequireNotAfterCheck(AuthenticodeValidator* self);

    [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "AuthenticodeValidator_ignore_not_before_check", ExactSpelling = true)]
    public static unsafe extern void IgnoreNotBeforeCheck(AuthenticodeValidator* self);

    [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "AuthenticodeValidator_ignore_not_after_check", ExactSpelling = true)]
    public static unsafe extern void IgnoreNotAfterCheck(AuthenticodeValidator* self);

    [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "AuthenticodeValidator_require_signing_certificate_check", ExactSpelling = true)]
    public static unsafe extern void RequireSigningCertificateCheck(AuthenticodeValidator* self);

    [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "AuthenticodeValidator_ignore_signing_certificate_check", ExactSpelling = true)]
    public static unsafe extern void IgnoreSigningCertificateCheck(AuthenticodeValidator* self);

    [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "AuthenticodeValidator_require_basic_authenticode_validation", ExactSpelling = true)]
    public static unsafe extern void RequireBasicAuthenticodeValidation(AuthenticodeValidator* self, VecU8* expectedFileHash);

    [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "AuthenticodeValidator_ignore_basic_authenticode_validation", ExactSpelling = true)]
    public static unsafe extern void IgnoreBasicAuthenticodeValidation(AuthenticodeValidator* self);

    [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "AuthenticodeValidator_require_chain_check", ExactSpelling = true)]
    public static unsafe extern void RequireChainCheck(AuthenticodeValidator* self);

    [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "AuthenticodeValidator_ignore_chain_check", ExactSpelling = true)]
    public static unsafe extern void IgnoreChainCheck(AuthenticodeValidator* self);

    [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "AuthenticodeValidator_exclude_cert_authorities", ExactSpelling = true)]
    public static unsafe extern void ExcludeCertAuthorities(AuthenticodeValidator* self, DirectoryNameIterator* certAuths);

    [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "AuthenticodeValidator_verify", ExactSpelling = true)]
    public static unsafe extern IntPtr Verify(AuthenticodeValidator* self);

    [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "AuthenticodeValidator_destroy", ExactSpelling = true)]
    public static unsafe extern void Destroy(AuthenticodeValidator* self);
}
