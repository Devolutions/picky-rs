// <auto-generated/> by Diplomat

#pragma warning disable 0105
using System;
using System.Runtime.InteropServices;

using Devolutions.Picky.Diplomat;
#pragma warning restore 0105

namespace Devolutions.Picky.Raw;

#nullable enable

[StructLayout(LayoutKind.Sequential)]
public partial struct JwtSigBuilder
{
    private const string NativeLib = "DevolutionsPicky";

    [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "JwtSigBuilder_init", ExactSpelling = true)]
    public static unsafe extern JwtSigBuilder* Init();

    [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "JwtSigBuilder_set_algorithm", ExactSpelling = true)]
    public static unsafe extern void SetAlgorithm(JwtSigBuilder* self, JwsAlg alg);

    [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "JwtSigBuilder_set_content_type", ExactSpelling = true)]
    public static unsafe extern void SetContentType(JwtSigBuilder* self, byte* cty, nuint ctySz);

    /// <summary>
    /// Claims should be a valid JSON payload.
    /// </summary>
    [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "JwtSigBuilder_set_claims", ExactSpelling = true)]
    public static unsafe extern void SetClaims(JwtSigBuilder* self, byte* claims, nuint claimsSz);

    [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "JwtSigBuilder_build", ExactSpelling = true)]
    public static unsafe extern IntPtr Build(JwtSigBuilder* self);

    [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "JwtSigBuilder_destroy", ExactSpelling = true)]
    public static unsafe extern void Destroy(JwtSigBuilder* self);
}
