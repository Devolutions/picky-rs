// <auto-generated/> by Diplomat

#pragma warning disable 0105
using System;
using System.Runtime.InteropServices;

using Devolutions.Picky.Diplomat;
#pragma warning restore 0105

namespace Devolutions.Picky.Raw;

#nullable enable

/// <summary>
/// A PKCS12 archive.
/// </summary>
[StructLayout(LayoutKind.Sequential)]
public partial struct Pfx
{
#if __IOS__
    private const string NativeLib = "libDevolutionsPicky.framework/libDevolutionsPicky";
#else
    private const string NativeLib = "DevolutionsPicky";
#endif

    [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "Pfx_builder", ExactSpelling = true)]
    public static unsafe extern PfxBuilder* Builder(Pkcs12CryptoContext* cryptoContext);

    /// <summary>
    /// Parses a PKCS12 archive (PFX) from its DER representation.
    /// </summary>
    [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "Pfx_from_der", ExactSpelling = true)]
    public static unsafe extern IntPtr FromDer(byte* der, nuint derSz, Pkcs12CryptoContext* cryptoContext, Pkcs12ParsingParams* parsingParams);

    /// <summary>
    /// Saves this PKCS12 archive to the filesystem.
    /// </summary>
    [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "Pfx_save_to_file", ExactSpelling = true)]
    public static unsafe extern IntPtr SaveToFile(Pfx* self, byte* path, nuint pathSz);

    /// <summary>
    /// Returns a `SafeBagIterator` to inspect PFX data
    /// </summary>
    [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "Pfx_safe_bags", ExactSpelling = true)]
    public static unsafe extern SafeBagIterator* SafeBags(Pfx* self);

    /// <summary>
    /// Crawls all safe contents and safe bags and returns true if one of them is unknown.
    /// </summary>
    /// <remarks>
    /// "Unknown" in this context means that the content is encrypted and most
    /// likely the provided password was wrong, or no password at all was provided.
    /// It is required to relax parsing strictness by modifying parsing
    /// parameters via the `Pkcs12ParsingParams` object in order to allow a
    /// `Pfx` object with unknown items. This is useful for partial inspection.
    /// </remarks>
    [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "Pfx_has_unknown", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.U1)]
    public static unsafe extern bool HasUnknown(Pfx* self);

    [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "Pfx_destroy", ExactSpelling = true)]
    public static unsafe extern void Destroy(Pfx* self);
}
