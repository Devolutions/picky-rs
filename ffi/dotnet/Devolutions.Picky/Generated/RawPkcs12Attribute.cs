// <auto-generated/> by Diplomat

#pragma warning disable 0105
using System;
using System.Runtime.InteropServices;

using Devolutions.Picky.Diplomat;
#pragma warning restore 0105

namespace Devolutions.Picky.Raw;

#nullable enable

/// <summary>
/// Attributes which can be used to store additional information about safe (e.g. friendly name, key ID).
/// </summary>
[StructLayout(LayoutKind.Sequential)]
public partial struct Pkcs12Attribute
{
    private const string NativeLib = "DevolutionsPicky";

    /// <summary>
    /// Creates a new `friendly name` attribute. This attribute is used to store a human-readable
    /// name of the safe bag contents (e.g. certificate name).
    /// </summary>
    [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "Pkcs12Attribute_new_friendly_name", ExactSpelling = true)]
    public static unsafe extern Pkcs12FfiResultBoxPkcs12AttributeBoxPickyError NewFriendlyName(byte* name, nuint nameSz);

    /// <summary>
    /// Creates a new `local key id` attribute. This attribute is used to indicate relation between
    /// private key and certificate (when set to same value on both objects).
    /// </summary>
    [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "Pkcs12Attribute_new_local_key_id", ExactSpelling = true)]
    public static unsafe extern Pkcs12Attribute* NewLocalKeyId(byte* value, nuint valueSz);

    [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "Pkcs12Attribute_get_kind", ExactSpelling = true)]
    public static unsafe extern Pkcs12AttributeKind GetKind(Pkcs12Attribute* self);

    [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "Pkcs12Attribute_get_friendly_name", ExactSpelling = true)]
    public static unsafe extern Pkcs12FfiResultVoidBoxPickyError GetFriendlyName(Pkcs12Attribute* self, DiplomatWriteable* writeable);

    [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "Pkcs12Attribute_destroy", ExactSpelling = true)]
    public static unsafe extern void Destroy(Pkcs12Attribute* self);
}
