name: $(BuildID)

trigger:
  branches:
    include:
      - master

pr:
  branches:
    include:
      - master

variables:
  openssl_version: 1.1.1b-5

jobs:
  - job: linux64
    pool:
      name: 'Devolutions - Linux containers'

    workspace:
      clean: all

    container: devolutions/waykbuilder:linux

    steps:
      - checkout: self
        clean: true
        fetchDepth: 1

      - script: |
          echo "Check formatting"
          cargo +stable fmt --all -- --check 2> /dev/null
          if ! [ $? -eq 0 ] ; then
              printf "\n$(tput setaf 3)Bad formatting, please run 'cargo +stable fmt'\n\n"
              exit 1
          fi

          conan install openssl/$(OPENSSL_VERSION)@devolutions/stable -g virtualenv -pr linux-x86_64
          . activate.sh
          cargo build --release
          if ! [ $? -eq 0 ] ; then
              printf "\n$(tput setaf 3)Build failed\n\n"
              exit 1
          fi

          cargo test --release
          if ! [ $? -eq 0 ] ; then
              printf "\n$(tput setaf 3)Unit tests failed\n\n"
              exit 1
          fi

          mkdir -p $(Build.ArtifactStagingDirectory)/linux/x86_64
          cp $(Build.Repository.LocalPath)/target/release/picky-server $(Build.ArtifactStagingDirectory)/linux/x86_64/
        displayName: Building picky-rs

      - task: PublishBuildArtifacts@1
        inputs:
          pathToPublish: $(Build.ArtifactStagingDirectory)
          artifactName: picky

  - job: windows64
    pool:
      name: 'Devolutions - Windows containers'

    workspace:
      clean: all

    container: devolutions/waykbuilder:vstools2k19

    steps:
      - checkout: self
        clean: true
        fetchDepth: 1

      - powershell: |
          conan install openssl/$(OPENSSL_VERSION)@devolutions/stable -g virtualenv -pr windows-x86_64
          .\activate.ps1
          cargo build --release --target=x86_64-pc-windows-msvc
          mkdir $(Build.ArtifactStagingDirectory)/windows/x86_64
          cp $(Build.Repository.LocalPath)/target/x86_64-pc-windows-msvc/release/picky-server.exe $(Build.ArtifactStagingDirectory)/windows/x86_64/
        displayName: Building picky-rs
        env:
          RUSTFLAGS: '-C target-feature=+crt-static'

      - task: PublishBuildArtifacts@1
        inputs:
          pathToPublish: $(Build.ArtifactStagingDirectory)
          artifactName: picky

