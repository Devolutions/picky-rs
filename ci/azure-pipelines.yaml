name: $(BuildID)

trigger:
  branches:
    include:
      - master

pr:
  branches:
    include:
      - master

variables:
  openssl_version: 1.1.1b-5

jobs:
  - job: linux64
    pool:
      name: 'Devolutions - Linux containers'

    workspace:
      clean: all

    container: devolutions/waykbuilder:linux

    steps:
      - checkout: self
        clean: true
        fetchDepth: 1

      - script: |
          echo "Check formatting"
          cargo fmt --all -- --check
          if ! [ $? -eq 0 ] ; then
              echo "Bad formatting, please run 'cargo +stable fmt --all'"
              exit 1
          fi

          conan install openssl/$(OPENSSL_VERSION)@devolutions/stable -g virtualenv -pr linux-x86_64
          . activate.sh
          cargo build --release
          if ! [ $? -eq 0 ] ; then
              echo "Build failed"
              exit 1
          fi

          cargo test --release --features "wincert","ctl","pkcs7"
          if ! [ $? -eq 0 ] ; then
              echo "Unit tests failed"
              exit 1
          fi

          mkdir -p $(Build.ArtifactStagingDirectory)/linux/x86_64
          cp $(Build.Repository.LocalPath)/target/release/picky-server $(Build.ArtifactStagingDirectory)/linux/x86_64/
          cp $(Build.Repository.LocalPath)/target/release/picky-signtool $(Build.ArtifactStagingDirectory)/linux/x86_64/
        displayName: Building picky-rs

      - task: PublishBuildArtifacts@1
        inputs:
          pathToPublish: $(Build.ArtifactStagingDirectory)
          artifactName: picky

  - job: windows64
    pool:
      name: 'Devolutions - Windows containers'

    workspace:
      clean: all

    container: devolutions/waykbuilder:vstools2k19

    steps:
      - checkout: self
        clean: true
        fetchDepth: 1

      - powershell: |
          conan install openssl/$(OPENSSL_VERSION)@devolutions/stable -g virtualenv -pr windows-x86_64
          .\activate.ps1
          cargo build --release --target=x86_64-pc-windows-msvc
          mkdir $(Build.ArtifactStagingDirectory)/windows/x86_64
          cp $(Build.Repository.LocalPath)/target/x86_64-pc-windows-msvc/release/picky-server.exe $(Build.ArtifactStagingDirectory)/windows/x86_64/
          cp $(Build.Repository.LocalPath)/target/x86_64-pc-windows-msvc/release/picky-signtool.exe $(Build.ArtifactStagingDirectory)/windows/x86_64/
        displayName: Building picky-rs
        env:
          RUSTFLAGS: '-C target-feature=+crt-static'

      - task: PublishBuildArtifacts@1
        inputs:
          pathToPublish: $(Build.ArtifactStagingDirectory)
          artifactName: picky

  - job: msrv
    # Minimum supported Rust version check for published crates.
    # If this break, bump crate version minor number.
    # See https://github.com/Devolutions/picky-rs/issues/89

    pool:
      vmImage: ubuntu-18.04
    steps:
      - script: |
          set -e
          curl https://sh.rustup.rs -sSf | sh -s -- -y --profile minimal --default-toolchain 1.56
        displayName: "Install rust 1.56"
      - script: cargo +1.56 check -p picky-asn1
        displayName: cargo check picky-asn1
      - script: cargo +1.56 check -p picky-asn1-der
        displayName: cargo check picky-asn1-der
      - script: cargo +1.56 check -p picky-asn1-x509
        displayName: cargo check picky-asn1-x509
      - script: cargo +1.56 check -p picky
        displayName: cargo check picky

