name: CI

on:
  push:
    branches:
      - master
  pull_request:
    types: [ opened, synchronize, reopened ]
  workflow_dispatch:

jobs:
  formatting:
    name: Check formatting
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v4

      - name: Check formatting
        shell: pwsh
        run: |
          Write-Host "Check formatting"

          cargo fmt --all -- --check

          if ($LastExitCode -eq 1) {
            throw "Bad formatting, please run 'cargo +stable fmt --all'"
          }

          cargo fmt --manifest-path ./ffi/wasm/Cargo.toml -- --check

          if ($LastExitCode -eq 1) {
            throw "Bad formatting, please run 'cargo +stable fmt --manifest-path ./ffi/wasm/Cargo.toml'"
          }

  lints:
    name: Lints [${{ matrix.os }}]
    runs-on: ${{ matrix.runner }}
    needs: formatting
    strategy:
      fail-fast: false
      matrix:
        os: [ windows, linux ]
        include:
          - os: windows
            runner: windows-2019
          - os: linux
            runner: ubuntu-20.04

    steps:
      - uses: actions/checkout@v4

      - name: Run clippy
        run: cargo clippy --locked --workspace --all-features --all-targets -- -D warnings

  lints-wasm:
    name: Lints [wasm]
    runs-on: ubuntu-20.04
    needs: formatting

    steps:
      - uses: actions/checkout@v4

      - name: Run clippy
        run: cargo clippy --locked --all-features --all-targets --manifest-path ./ffi/wasm/Cargo.toml -- -D warnings

      - name: Lint picky-ava-tests
        shell: pwsh
        run: |
          Set-Location ./ffi/wasm/ava_tests
          npm install
          npm run ci

  tests:
    name: Tests [${{ matrix.os }}]
    runs-on: ${{ matrix.runner }}
    needs: formatting
    strategy:
      fail-fast: false
      matrix:
        os: [ windows, linux ]
        include:
          - os: windows
            runner: windows-2019
          - os: linux
            runner: ubuntu-20.04

    steps:
      - uses: actions/checkout@v4

      - name: Run tests
        run: cargo test --locked --verbose --workspace --all-features

  msrv:
    # Minimum supported Rust version check for published crates.
    # If this break, bump crate version minor number.
    # See https://github.com/Devolutions/picky-rs/issues/89
    name: Check MSRV [${{ matrix.crate }}]
    runs-on: ubuntu-20.04
    needs: formatting
    strategy:
      fail-fast: false
      matrix:
        crate: [ picky-asn1, picky-asn1-der, picky-asn1-x509, picky ]
        include:
          - crate: picky-asn1
            msvc: "1.61"
          - crate: picky-asn1-der
            msvc: "1.61"
          - crate: picky-asn1-x509
            msvc: "1.61"
          - crate: picky
            msvc: "1.65"

    steps:
      - uses: actions/checkout@v4

      - name: Configure runner
        run: |
          set -e
          curl https://sh.rustup.rs -sSf | sh -s -- -y --profile minimal --default-toolchain ${{ matrix.msvc }}

      - name: cargo check ${{ matrix.crate }}
        run: cargo +${{ matrix.msvc }} check -p ${{ matrix.crate }}

  success:
    name: Success
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs:
      - formatting
      - lints
      - lints-wasm
      - tests
      - msrv

    steps:
      - name: CI succeeded
        id: succeeded
        if: ${{ !contains(needs.*.result, 'failure') }}
        run: exit 0

      - name: CI failed
        if: ${{ steps.succeeded.outcome == 'skipped' }}
        run: exit 1
