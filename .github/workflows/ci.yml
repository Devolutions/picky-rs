name: CI

on:
  push:
    branches:
      - master
  pull_request:
    types: [ opened, synchronize, reopened ]
  workflow_dispatch:

env:
   conan-version: 1.43.4

jobs:
  formatting:
    name: Check formatting
    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v2

      - name: Check formatting
        shell: pwsh
        run: |
          Write-Host "Check formatting"
          cargo fmt --all -- --check

          if ($LastExitCode -eq 1) {   
            throw "Bad formatting, please run 'cargo +stable fmt --all'"
          }

  build:
    name: picky ${{ matrix.type }} [${{ matrix.os }}]
    runs-on: ${{ matrix.runner }}
    needs: formatting
    env:
      CONAN_LOGIN_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
      CONAN_PASSWORD: ${{ secrets.ARTIFACTORY_READ_TOKEN }}
    strategy:
      fail-fast: false
      matrix:
        os: [ windows, linux ]
        type: [ build, test ]
        include:
          - os: windows
            runner: windows-2019
          - os: linux
            runner: ubuntu-18.04

    steps:
      - uses: actions/checkout@v2

      - name: Configure runner
        if: matrix.os == 'linux'
        run: |
          sudo apt update
          sudo apt install python3-wget python3-setuptools

      - name: Install conan
        run: |
          pip3 install conan==${{ env.conan-version }} invoke Jinja2 --upgrade

      - name: Configure conan
        run: |
          conan config install --type=git -sf settings https://github.com/Devolutions/conan-public
          conan remote clean
          conan remote add artifactory https://devolutions.jfrog.io/devolutions/api/conan/conan-local

      - name: Build [${{ matrix.os }}]
        if: matrix.os == 'linux' && matrix.type == 'build'
        run: |
         conan install openssl/1.1.1l@devolutions/stable -g virtualenv -pr ${{ matrix.os }}-x86_64 -s build_type=Release
         . activate.sh
         cargo build --release

      - name: Build [${{ matrix.os }}]
        if: matrix.os == 'windows' && matrix.type == 'build'
        env:
          RUSTFLAGS: '-C target-feature=+crt-static'
        run: |
         conan install openssl/1.1.1l@devolutions/stable -g virtualenv -pr ${{ matrix.os }}-x86_64 -s build_type=Release
         .\activate.ps1
         cargo build --release --target=x86_64-pc-windows-msvc

      - name: Test [${{ matrix.os }}]
        if: matrix.type == 'test'
        run: cargo test --release --features "wincert","ctl","pkcs7"

      - name: Prepare artifacts
        id: prepare-artifacts
        if: matrix.type == 'build'
        shell: pwsh
        run: |
          $StagingDir = Join-Path "$Env:RUNNER_TEMP" "picky"
          $ArchDir = Join-Path $StagingDir "${{matrix.os}}" "x86_64"
          New-Item -Path $ArchDir -ItemType "directory"

          $Binaries = @("picky-server", "picky-signtool")

          if ($Env:RUNNER_OS -Eq "Windows") {
            $Binaries = $Binaries | ForEach-Object {"$_.exe"}
          }

          Get-ChildItem -Recurse -Include $Binaries -File  | % {
            Copy-Item -Path $_.FullName -Destination $ArchDir -Force 
          }

          echo "::set-output name=staging-dir::$StagingDir"

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        if: matrix.type == 'build'
        with:
          name: picky
          path: ${{ steps.prepare-artifacts.outputs.staging-dir }}

  msrv:
    # Minimum supported Rust version check for published crates.
    # If this break, bump crate version minor number.
    # See https://github.com/Devolutions/picky-rs/issues/89
    name: Check minimum rust version
    runs-on: ubuntu-18.04
    needs: build

    steps:
      - uses: actions/checkout@v2

      - name: Configure runner 
        run: |
          set -e
          curl https://sh.rustup.rs -sSf | sh -s -- -y --profile minimal --default-toolchain 1.56

      - name: cargo check picky-asn1
        continue-on-error: true
        run: cargo +1.56 check -p picky-asn1

      - name: cargo check picky-asn1-der
        continue-on-error: true
        run: cargo +1.56 check -p picky-asn1-der

      - name: cargo check picky-asn1-x509
        continue-on-error: true
        run: cargo +1.56 check -p picky-asn1-x509

      - name: cargo check picky
        continue-on-error: true
        run: cargo +1.56 check -p picky
