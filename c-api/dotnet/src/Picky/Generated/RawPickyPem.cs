// Automatically generated by Diplomat

#pragma warning disable 0105
using System;
using System.Runtime.InteropServices;

using Devolutions.Picky.Diplomat;
#pragma warning restore 0105

namespace Devolutions.Picky.Raw;

#nullable enable

/// <summary>
/// Picky PEM object.
/// </summary>
[StructLayout(LayoutKind.Sequential)]
public partial struct PickyPem
{
    private const string NativeLib = "picky";

    /// <summary>
    /// Creates a PEM object with the given label and data.
    /// </summary>
    [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "PickyPem_new", ExactSpelling = true)]
    public static unsafe extern PemFfiResultBoxPickyPemBoxPickyError New(byte* label, nuint labelSz, byte* data, nuint dataSz);

    /// <summary>
    /// Loads a PEM from the filesystem.
    /// </summary>
    [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "PickyPem_load_from_file", ExactSpelling = true)]
    public static unsafe extern PemFfiResultBoxPickyPemBoxPickyError LoadFromFile(byte* path, nuint pathSz);

    /// <summary>
    /// Saves this PEM object to the filesystem.
    /// </summary>
    [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "PickyPem_save_to_file", ExactSpelling = true)]
    public static unsafe extern PemFfiResultVoidBoxPickyError SaveToFile(PickyPem* self, byte* path, nuint pathSz);

    /// <summary>
    /// Parses a PEM-encoded string representation.
    /// </summary>
    [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "PickyPem_parse", ExactSpelling = true)]
    public static unsafe extern PemFfiResultBoxPickyPemBoxPickyError Parse(byte* input, nuint inputSz);

    /// <summary>
    /// Returns the length of the data contained by this PEM object.
    /// </summary>
    [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "PickyPem_get_data_length", ExactSpelling = true)]
    public static unsafe extern ulong GetDataLength(PickyPem* self);

    /// <summary>
    /// Returns the label of this PEM object.
    /// </summary>
    [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "PickyPem_get_label", ExactSpelling = true)]
    public static unsafe extern PemFfiResultVoidBoxPickyError GetLabel(PickyPem* self, DiplomatWriteable* writeable);

    /// <summary>
    /// Returns the string representation of this PEM object.
    /// </summary>
    [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "PickyPem_to_repr", ExactSpelling = true)]
    public static unsafe extern PemFfiResultVoidBoxPickyError ToRepr(PickyPem* self, DiplomatWriteable* writeable);

    [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "PickyPem_destroy", ExactSpelling = true)]
    public static unsafe extern void Destroy(PickyPem* self);
}
