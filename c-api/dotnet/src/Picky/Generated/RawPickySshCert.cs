// Automatically generated by Diplomat

#pragma warning disable 0105
using System;
using System.Runtime.InteropServices;

using Devolutions.Picky.Diplomat;
#pragma warning restore 0105

namespace Devolutions.Picky.Raw;

#nullable enable

[StructLayout(LayoutKind.Sequential)]
public partial struct PickySshCert
{
    private const string NativeLib = "picky";

    [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "PickySshCert_builder", ExactSpelling = true)]
    public static unsafe extern PickySshCertBuilder* Builder();

    /// <summary>
    /// Parses string representation of a SSH Certificate.
    /// </summary>
    [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "PickySshCert_parse", ExactSpelling = true)]
    public static unsafe extern SshFfiResultBoxPickySshCertBoxPickyError Parse(byte* repr, nuint reprSz);

    /// <summary>
    /// Returns the SSH Certificate string representation.
    /// </summary>
    [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "PickySshCert_to_repr", ExactSpelling = true)]
    public static unsafe extern SshFfiResultVoidBoxPickyError ToRepr(PickySshCert* self, DiplomatWriteable* writeable);

    [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "PickySshCert_get_public_key", ExactSpelling = true)]
    public static unsafe extern PickySshPublicKey* GetPublicKey(PickySshCert* self);

    [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "PickySshCert_get_ssh_key_type", ExactSpelling = true)]
    public static unsafe extern PickySshCertKeyType GetSshKeyType(PickySshCert* self);

    [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "PickySshCert_get_cert_type", ExactSpelling = true)]
    public static unsafe extern PickySshCertType GetCertType(PickySshCert* self);

    [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "PickySshCert_get_valid_after", ExactSpelling = true)]
    public static unsafe extern PickySshTime* GetValidAfter(PickySshCert* self);

    [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "PickySshCert_get_valid_before", ExactSpelling = true)]
    public static unsafe extern PickySshTime* GetValidBefore(PickySshCert* self);

    [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "PickySshCert_get_signature_key", ExactSpelling = true)]
    public static unsafe extern PickySshPublicKey* GetSignatureKey(PickySshCert* self);

    [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "PickySshCert_get_key_id", ExactSpelling = true)]
    public static unsafe extern SshFfiResultVoidBoxPickyError GetKeyId(PickySshCert* self, DiplomatWriteable* writeable);

    [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "PickySshCert_get_comment", ExactSpelling = true)]
    public static unsafe extern SshFfiResultVoidBoxPickyError GetComment(PickySshCert* self, DiplomatWriteable* writeable);

    [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "PickySshCert_destroy", ExactSpelling = true)]
    public static unsafe extern void Destroy(PickySshCert* self);
}
