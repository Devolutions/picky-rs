// Automatically generated by Diplomat

#pragma warning disable 0105
using System;
using System.Runtime.InteropServices;

using Devolutions.Picky.Diplomat;
#pragma warning restore 0105

namespace Devolutions.Picky.Raw;

#nullable enable

/// <summary>
/// SSH datetime.
/// </summary>
[StructLayout(LayoutKind.Sequential)]
public partial struct SshTime
{
    private const string NativeLib = "picky";

    [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "SshTime_now", ExactSpelling = true)]
    public static unsafe extern SshTime* Now();

    [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "SshTime_from_timestamp", ExactSpelling = true)]
    public static unsafe extern SshTime* FromTimestamp(ulong timestamp);

    [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "SshTime_get_timestamp", ExactSpelling = true)]
    public static unsafe extern ulong GetTimestamp(SshTime* self);

    [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "SshTime_get_month", ExactSpelling = true)]
    public static unsafe extern byte GetMonth(SshTime* self);

    [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "SshTime_get_day", ExactSpelling = true)]
    public static unsafe extern byte GetDay(SshTime* self);

    [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "SshTime_get_hour", ExactSpelling = true)]
    public static unsafe extern byte GetHour(SshTime* self);

    [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "SshTime_get_minute", ExactSpelling = true)]
    public static unsafe extern byte GetMinute(SshTime* self);

    [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "SshTime_get_second", ExactSpelling = true)]
    public static unsafe extern byte GetSecond(SshTime* self);

    [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "SshTime_get_year", ExactSpelling = true)]
    public static unsafe extern ushort GetYear(SshTime* self);

    [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "SshTime_destroy", ExactSpelling = true)]
    public static unsafe extern void Destroy(SshTime* self);
}
